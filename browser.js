!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("ClimaCellAPI",[],e):"object"==typeof exports?exports.ClimaCellAPI=e():t.ClimaCellAPI=e()}(this,(function(){return(()=>{"use strict";var t={722:function(t,e,n){var o,r=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var c=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e.prototype.download=function(t){var e=this;if("undefined"==typeof document)throw new Error("Download method is not available in current environment.");return new Promise((function(n,o){try{var r=document.createElement("a");r.setAttribute("href","data:text/csv;charset=utf-8,".concat(e.getCsv())),r.setAttribute("download",e.parseFilename(t)),document.body.appendChild(r),r.click(),document.body.removeChild(r),n()}catch(t){o(t)}}))},e}(i(n(341)).default);e.default=c},341:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t){this.header="",this.content="",this.options={delimiter:",",filename:"output.csv",closure:'"'},Object.assign(this.options,t)}return t.prototype.getOptions=function(){return this.options},t.prototype.setHeader=function(t){var e=this;if(!Array.isArray(t))throw new Error("Error trying to set the CSV Header. The column names must be an array");if(this.content&&this.content.split("\n")[0].split(this.options.delimiter).length!==t.length)throw new Error("Error trying to set the CSV Header. The content cells quantity does not match with header columns.");this.header="";var n=this.options.closure;t.forEach((function(t){e.header+="".concat(n).concat(String(t).trim().replace(new RegExp(n,"g"),n+n)).concat(n).concat(e.options.delimiter)})),this.header=this.header.slice(0,-1)+"\n"},t.prototype.setContent=function(t){var e=this;if(!Array.isArray(t)||!t.every((function(t){return t&&"object"==typeof t&&!Array.isArray(t)})))throw new Error("Error trying to set the CSV Content. The content must be an objects array");t.forEach((function(t){var n=Object.values(t);if(e.header&&e.header.split(e.options.delimiter).length!==n.length)throw new Error("Error trying to set the CSV Content. The header does not match with the content cells quantity.");var o=e.options.closure;n.forEach((function(t){e.content+="".concat(o).concat(String(t).trim().replace(new RegExp(o,"g"),o+o)).concat(o).concat(e.options.delimiter)})),e.content=e.content.slice(0,-1),e.content+="\n"}))},t.prototype.getCsv=function(){return this.header+this.content},t.prototype.parseFilename=function(t){var e=null!=t?t:this.options.filename;return e.endsWith(".csv")||(e+=".csv"),e},t}();e.default=n}},e={},n=function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={exports:{}};return t[o].call(i.exports,i,i.exports,n),i.exports}(722);return n.default})()}));